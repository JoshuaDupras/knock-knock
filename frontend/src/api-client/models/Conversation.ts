/* tslint:disable */
/* eslint-disable */
/**
 * Chat API
 * WebSocket chat service with anonymous pairing, skip & timer rotation, and optional account registration. 
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { InternalUser } from './InternalUser';
import {
    InternalUserFromJSON,
    InternalUserFromJSONTyped,
    InternalUserToJSON,
    InternalUserToJSONTyped,
} from './InternalUser';

/**
 * Runtime pairing room (two participants for now)
 * @export
 * @interface Conversation
 */
export interface Conversation {
    /**
     * 
     * @type {string}
     * @memberof Conversation
     */
    id?: string;
    /**
     * 
     * @type {Array<InternalUser>}
     * @memberof Conversation
     */
    participants?: Array<InternalUser>;
    /**
     * Round timer (omitted from JSON)
     * @type {string}
     * @memberof Conversation
     */
    timer?: string;
}

/**
 * Check if a given object implements the Conversation interface.
 */
export function instanceOfConversation(value: object): value is Conversation {
    return true;
}

export function ConversationFromJSON(json: any): Conversation {
    return ConversationFromJSONTyped(json, false);
}

export function ConversationFromJSONTyped(json: any, ignoreDiscriminator: boolean): Conversation {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'participants': json['participants'] == null ? undefined : ((json['participants'] as Array<any>).map(InternalUserFromJSON)),
        'timer': json['timer'] == null ? undefined : json['timer'],
    };
}

export function ConversationToJSON(json: any): Conversation {
    return ConversationToJSONTyped(json, false);
}

export function ConversationToJSONTyped(value?: Conversation | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'participants': value['participants'] == null ? undefined : ((value['participants'] as Array<any>).map(InternalUserToJSON)),
        'timer': value['timer'],
    };
}

