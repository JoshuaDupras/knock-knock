/* tslint:disable */
/* eslint-disable */
/**
 * Chat API
 * WebSocket chat service with anonymous pairing, skip & timer rotation, and optional account registration. 
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AnonymousSessionResponse
 */
export interface AnonymousSessionResponse {
    /**
     * 
     * @type {string}
     * @memberof AnonymousSessionResponse
     */
    conversationId?: string;
    /**
     * 
     * @type {string}
     * @memberof AnonymousSessionResponse
     */
    token: string;
    /**
     * 
     * @type {string}
     * @memberof AnonymousSessionResponse
     */
    websocketUrl: string;
    /**
     * 
     * @type {number}
     * @memberof AnonymousSessionResponse
     */
    expiresInSeconds: number;
}

/**
 * Check if a given object implements the AnonymousSessionResponse interface.
 */
export function instanceOfAnonymousSessionResponse(value: object): value is AnonymousSessionResponse {
    if (!('token' in value) || value['token'] === undefined) return false;
    if (!('websocketUrl' in value) || value['websocketUrl'] === undefined) return false;
    if (!('expiresInSeconds' in value) || value['expiresInSeconds'] === undefined) return false;
    return true;
}

export function AnonymousSessionResponseFromJSON(json: any): AnonymousSessionResponse {
    return AnonymousSessionResponseFromJSONTyped(json, false);
}

export function AnonymousSessionResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): AnonymousSessionResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'conversationId': json['conversationId'] == null ? undefined : json['conversationId'],
        'token': json['token'],
        'websocketUrl': json['websocketUrl'],
        'expiresInSeconds': json['expiresInSeconds'],
    };
}

export function AnonymousSessionResponseToJSON(json: any): AnonymousSessionResponse {
    return AnonymousSessionResponseToJSONTyped(json, false);
}

export function AnonymousSessionResponseToJSONTyped(value?: AnonymousSessionResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'conversationId': value['conversationId'],
        'token': value['token'],
        'websocketUrl': value['websocketUrl'],
        'expiresInSeconds': value['expiresInSeconds'],
    };
}

