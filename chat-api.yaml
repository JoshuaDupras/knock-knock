openapi: 3.0.3
info:
  title: Chat API
  version: 1.0.1
  description: >
    WebSocket chat service with anonymous pairing, skip & timer rotation,
    and optional account registration.

servers:
  - url: http://localhost:8080

paths:
  /ping:
    get:
      responses:
        "200":
          description: ping response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pong"

  /session/anonymous:
    post:
      summary: Start an anonymous 5‑minute session and join the waiting queue
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AnonymousSessionRequest"
      responses:
        "201":
          description: Anonymous session created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AnonymousSessionResponse"

  /session/skip:
    post:
      summary: Leave the current conversation and rotate immediately
      security:
        - BearerAuth: []
      responses:
        "204":
          description: Rotated successfully
        "429":
          description: Skip called too quickly
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /account/register:
    post:
      summary: Create a persistent account (username must be unique)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterRequest"
      responses:
        "201":
          description: Account created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthResponse"
        "409":
          description: Username already exists
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /login:
    post:
      summary: Log in with an existing account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthResponse"
        "401":
          description: Bad credentials
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /me:
    get:
      summary: Return the current user profile
      security:
        - BearerAuth: []
      responses:
        "200":
          description: Profile
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"

  /ws/chat:
    get:
      summary: WebSocket for real‑time chat
      parameters:
        - name: token
          in: query
          required: true
          schema:
            type: string
      responses:
        "101":
          description: Upgraded to WebSocket

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    # ─── Public / Request‑Response models ──────────────────────────
    Pong:
      type: object
      required: [ping]
      properties:
        ping:
          type: string
          example: pong

    AnonymousSessionRequest:
      type: object
      required: [displayName]
      properties:
        displayName:
          type: string

    AnonymousSessionResponse:
      type: object
      required: [token, websocketUrl, expiresInSeconds]
      properties:
        conversationId:
          type: string
        token:
          type: string
        websocketUrl:
          type: string
        expiresInSeconds:
          type: integer
          format: int32

    RegisterRequest:
      type: object
      required: [username]
      properties:
        username:
          type: string
        password:
          type: string

    LoginRequest:
      type: object
      required: [username, password]
      properties:
        username:
          type: string
        password:
          type: string

    AuthResponse:
      type: object
      required: [token]
      properties:
        token:
          type: string

    User:
      description: Public view of an account
      type: object
      required: [id, username]
      properties:
        id:
          type: string
        username:
          type: string

    Error:
      type: object
      required: [error]
      properties:
        error:
          type: string
        details:
          type: string
          nullable: true

    # ─── Internal runtime helpers (not in any REST path) ────────────
    InternalUser:
      description: Internal user struct generated for server logic
      x-go-type: user
      x-go-type-import: example.com/ephemeral/server
      type: object
      properties:
        id:       { type: string }
        username: { type: string }
        lastSkipTime:
          type: string
          format: date-time
          x-go-name: LastSkipTime
        conn:
          description: WebSocket connection (ignored in JSON)
          type: string
          x-go-type: "*websocket.Conn"
          x-go-type-import: github.com/gorilla/websocket
          x-oapi-codegen-extra-tags:
            json: '"-"'

    Conversation:
      description: Runtime pairing room (two participants for now)
      x-go-type: conversation
      x-go-type-import: example.com/ephemeral/server
      type: object
      properties:
        id: { type: string }
        participants:
          type: array
          items: { $ref: "#/components/schemas/InternalUser" }
        timer:
          description: Round timer (omitted from JSON)
          type: string
          x-go-type: "*time.Timer"
          x-go-type-import: time
          x-oapi-codegen-extra-tags:
            json: '"-"'
