name: build-test-push-deploy
on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      IMAGE_TAG: ${{ github.sha }}
      REGISTRY: ghcr.io
    steps:
      - uses: actions/checkout@v4

      # ----- authenticate to GHCR -----
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_TOKEN }}

      # ----- build + push backend -----
      - uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: ${{ env.REGISTRY }}/${{ github.repository }}-api:${{ env.IMAGE_TAG }}

      # ----- build + push frontend -----
      - uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: true
          tags: ${{ env.REGISTRY }}/${{ github.repository }}-web:${{ env.IMAGE_TAG }}

      # ----- deploy over SSH -----
      - name: Deploy to droplet
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          passphrase: ${{ secrets.SERVER_SSH_PASSPHRASE }}
          envs: IMAGE_TAG
          script: |
            set -eux
            cd /srv/knock-knock
            echo "IMAGE_TAG=${IMAGE_TAG}" > .env        # Compose reads this
            docker compose --env-file .env -f docker-compose.prod.yml pull
            docker compose --env-file .env -f docker-compose.prod.yml up -d --remove-orphans
            docker image prune -af                      # clean old layers
